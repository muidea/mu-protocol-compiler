import time

def WriteCopyrightDeclare(configFile, author):
	data = [];
	data.append('#define COPYRIGHT_DECLARE \\\n')
	data.append('\"//\\n\\\n')
	data.append('//\\n\\\n')
	data.append('//    This software is provided \'as-is\', without any express or implied\\n\\\n')
	data.append('//    warranty. In no event will the authors be held liable for any\\n\\\n')
	data.append('//    damages arising from the use of this software.\\n\\\n')
	data.append('//\\n\\\n')
	data.append('//    Generated by mupcompiler.\\n\\\n')
	data.append('//\\n\\\n')
	data.append('//    Author: %(author)s\\n\\\n' % {'author' : author})
	data.append('//\\n\\\n')
	data.append('//\\n\"\n')
	data.append('\n')
	configFile.writelines(data)

def WriteProductDeclare(configFile, product):
	data = []
	data.append('#define PRODUCT_DECLARE \\\n')
	data.append('\"%(product)s\"\n'%{'product' : product})
	data.append('\n')	
	configFile.writelines(data)

def WriteVersionDeclare(configFile, version):
	data = []
	data.append('#define VERSION_DECLARE \\\n')
	data.append('\"Version: %(version)s\"\n'%{'version' : version})
	data.append('\n')
	configFile.writelines(data)
	
def WriteBuildTimeDeclare(configFile, buildTime):
	data = []
	data.append('#define BUILD_TIME_DECLARE \\\n')
	data.append('\"Build: %(buildTime)s\"\n'%{'buildTime' : buildTime})
	data.append('\n')
	configFile.writelines(data)
	
def WriteAuthorDeclare(configFile, author):
	data = []
	data.append('#define AUTHOR_DECLARE \\\n')
	data.append('\"Author: %(author)s\"\n'%{'author' : author})
	data.append('\n')
	configFile.writelines(data)

def WritePrecomplieBegin(configFile, currentTime):
	timeStamp = time.strftime("%H%M",currentTime)
	token = '__%(decalre)s_%(timeStamp)s__' % {'decalre' : configFile.name.upper().replace('.','_'),'timeStamp' : timeStamp}
	data = []
	data.append('#ifndef %(token)s\n'%{'token':token})
	data.append('#define %(token)s\n\n'%{'token':token})
	configFile.writelines(data)

def WritePrecomplieEnd(configFile):
	data = ['#endif\n\n']
	configFile.writelines(data)
	
def UpdateConfig(configFileName):
	currentTime = time.localtime()
	buildTime = time.strftime("%Y-%m-%d %H:%M:%S",currentTime)
	author = 'muidea@gmail.com'
	product = 'power by mupcompiler.'
	version = 'v1.0.0'
	configFile = open(configFileName,'w')
	
	WritePrecomplieBegin(configFile, currentTime)
	WriteCopyrightDeclare(configFile,author)
	WriteProductDeclare(configFile,product)
	WriteVersionDeclare(configFile,version)
	WriteBuildTimeDeclare(configFile,buildTime)
	WriteAuthorDeclare(configFile,author)
	WritePrecomplieEnd(configFile)	
	
	configFile.close()

if __name__ == '__main__':
	UpdateConfig('mupconfig.h')
